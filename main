#!/bin/bash
_scriptRoot="$(dirname $(realpath $0))"
_scriptName="$(basename ${_scriptRoot})"
pushd ${_scriptRoot}

function isTmpfs {
  [ -z "${1}" ] && echo no arg given && return 1
  [[ "$(df -h --output=fstype "${1}" 2>&1 | tail -n1)" == "tmpfs" ]]
  return $?
}

if isTmpfs /tmp
then
  echo "Using /tmp tmpfs"
  TMPDIR=/tmp
elif isTmpfs "${XDG_RUNTIME_DIR}"
then
  echo "Using ${XDG_RUNTIME_DIR} tmpfs"
  TMPDIR=${XDG_RUNTIME_DIR}
else
  echo "MISSING TMPFS MOUNT. USING /tmp BUT MAY IMPACT SD LIFESPAN."
fi

logFileChromium="${TMPDIR}/${_scriptName}.chromium.log"
logFile="${TMPDIR}/${_scriptName}.log"

exec 3>&1 4>&2
trap 'exec 2>&4 1>&3' 0 1 2 3
exec 1>${logFile} 2>&1

# Begin

  # Disable display sleeping
xset s noblank
xset s off
xset -dpms

  # Run unclutter to hide the mouse after idle.
pkill -f -9 unclutter
unclutter -idle 0.5 -root &

  # Get variables
eval $(jq -r '.credentials | to_entries | .[] | .key + "=" + (.value | @sh)' config.json)
URLs=($(jq -r '.urls[] | @text' config.json))

[ -z "$username" ]       && echo need username       && exit 1
[ -z "$passwordBase64" ] && echo need passwordBase64 && exit 1
[ -z "$URLs" ]           && echo need URLs           && exit 1


  # Start an x11vnc instance
pkill -f -9 x11vnc
x11vnc -bg -reopen -forever -display :0 >/dev/null 2>&1 &

  # Start chromium
pkill -f -9 chromium
chromium --kiosk --incognito --new-window --enable-logging=stderr --v=1 ${URLs[0]} >${logFileChromium} 2>&1 &

# Wait for chromium's log file to receive some writes before waiting...
timer=0 ; timeout=30
while [ ! -s ${logFileChromium} ] && [ $timer -lt $timeout ]
do
  sleep 1
  echo "Waiting for chromium to fire up..."
  ((timer++))
done

# Tail the debug log until there's silence - indicating that Chromium has 
# finished loading the first page of the array and is likely ready for logon

echo "Waiting for Chromium log file to stop logging..."
tail -f ${logFileChromium} | while read -t5 logLine; do : ; done
echo "Done."

echo "Logging in..."
xdotool search --onlyvisible --class Chromium type "$username"
xdotool search --onlyvisible --class Chromium key Tab
xdotool search --onlyvisible --class Chromium type "$(base64 -d <<< $passwordBase64)"
xdotool search --onlyvisible --class Chromium key Return
